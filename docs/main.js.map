{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/task-form/task-form.component.ts","./src/app/components/task-form/task-form.component.html","./src/app/components/tasks-table/tasks-table.component.ts","./src/app/components/tasks-table/tasks-table.component.html","./src/app/layout/main-layout/main-layout.component.ts","./src/app/layout/main-layout/main-layout.component.html","./src/app/pages/main-page/main-page.component.ts","./src/app/pages/main-page/main-page.component.html","./src/app/pages/task-detail-page/task-detail-page.component.ts","./src/app/pages/task-detail-page/task-detail-page.component.html","./src/app/pages/tasks-page/tasks-page.component.ts","./src/app/pages/tasks-page/tasks-page.component.html","./src/core/api.const.ts","./src/core/dto/create-task.transformer.ts","./src/core/interfaces/priority.interface.ts","./src/core/interfaces/status.interface.ts","./src/core/interfaces/table.interface.ts","./src/core/pipes/get-display-column-name.pipe.ts","./src/core/pipes/get-display-name.pipe.ts","./src/core/pipes/get-filter-display-name.pipe.ts","./src/core/services/in-memory-storage.service.ts","./src/core/services/task.service.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MainLayoutComponent } from './layout/main-layout/main-layout.component';\nimport { TasksPageComponent } from './pages/tasks-page/tasks-page.component';\nimport { MainPageComponent } from './pages/main-page/main-page.component';\nimport { TaskDetailPageComponent } from './pages/task-detail-page/task-detail-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainLayoutComponent,\n    children: [\n      {\n        path: '',\n        component: MainPageComponent,\n      },\n      {\n        path: 'tasks',\n        component: TasksPageComponent,\n      },\n      {\n        path: 'task/:id',\n        component: TaskDetailPageComponent,\n      },\n      {\n        path: 'task/new',\n        component: TaskDetailPageComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'tasktracker';\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { provideAnimationsAsync } from '@angular/platform-browser/animations/async';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryStorageService } from 'src/core/services/in-memory-storage.service';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    HttpClientInMemoryWebApiModule.forRoot(InMemoryStorageService),\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n  ],\n  providers: [\n    provideAnimationsAsync(),\n    { provide: MAT_DATE_LOCALE, useValue: 'ru-RU' },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport {\r\n  FormGroup,\r\n  NonNullableFormBuilder,\r\n  ReactiveFormsModule,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { provideNativeDateAdapter } from '@angular/material/core';\r\nimport {\r\n  PRIORITIES,\r\n  PriorityType,\r\n  PriorityWithNames,\r\n} from 'src/core/interfaces/priority.interface';\r\nimport { STATUSES, StatusesWithNames, StatusType } from 'src/core/interfaces/status.interface';\r\nimport { TaskFormItem, TaskItem } from 'src/core/interfaces/task.interface';\r\nimport { TaskService } from 'src/core/services/task.service';\r\nimport { createTaskBodyDTO } from 'src/core/dto/create-task.transformer';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-task-form',\r\n  standalone: true,\r\n  imports: [\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatCardModule,\r\n    ReactiveFormsModule,\r\n    MatDatepickerModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\r\n      useValue: { floatLabel: 'auto' },\r\n    },\r\n    provideNativeDateAdapter(),\r\n  ],\r\n  templateUrl: './task-form.component.html',\r\n  styleUrl: './task-form.component.scss',\r\n})\r\nexport class TaskFormComponent implements OnInit {\r\n  @Input() id: number | undefined\r\n  @Input() taskData: TaskItem | null = null;\r\n\r\n  updateMode: boolean = false;\r\n  editMode: boolean = false;\r\n\r\n  taskForm: FormGroup<TaskFormItem> = this._fb.group<TaskFormItem>({\r\n    title: this._fb.control<string>('', [Validators.required]),\r\n    description: this._fb.control<string>('', [Validators.required]),\r\n    deadline: this._fb.control<Date>(new Date(new Date().setHours(0,0,0,0)), [Validators.required]),\r\n    priority: this._fb.control<PriorityType | null>(null, [Validators.required]),\r\n    status: this._fb.control<StatusType | null>(null, [Validators.required]),\r\n    performer: this._fb.control<string>('', [Validators.required]),\r\n  });\r\n\r\n  statuses: StatusesWithNames[] = STATUSES;\r\n  priorities: PriorityWithNames[] = PRIORITIES;\r\n\r\n  constructor(\r\n    private _fb: NonNullableFormBuilder,\r\n    private _taskService: TaskService,\r\n    private _router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    if(!this.id) this.editMode = true;\r\n    if (!this.editMode) this.taskForm.disable();\r\n    if (this.taskData) this.taskForm.patchValue(this.taskData);\r\n  }\r\n\r\n  editTask(): void {\r\n    this.updateMode = true;\r\n    this.taskForm.controls.status.enable();\r\n    this.taskForm.controls.performer.enable();\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.updateMode) {\r\n\r\n    }\r\n    this._getFormAction\r\n    if (this.updateMode) {\r\n      this._taskService.updateTask(createTaskBodyDTO(this.taskForm.controls, this.id)).subscribe({\r\n        next: () => {\r\n          this.taskForm.reset();\r\n          this._router.navigate(['/', 'tasks']);\r\n        },\r\n        error: (err) => {\r\n          console.error(err);\r\n        },\r\n      });\r\n    } else {\r\n      this._taskService.createTask(createTaskBodyDTO(this.taskForm.controls)).subscribe({\r\n        next: () => {\r\n          this.taskForm.reset();\r\n          this._router.navigate(['/', 'tasks']);\r\n        },\r\n        error: (err) => {\r\n          console.error(err);\r\n        },\r\n      });\r\n    }\r\n      \r\n  }\r\n\r\n  private _getFormAction(): Observable<TaskItem[]> {\r\n    if (this.updateMode) {\r\n      return this._taskService.createTask(createTaskBodyDTO(this.taskForm.controls))\r\n    } else {\r\n      return this._taskService.updateTask(createTaskBodyDTO(this.taskForm.controls))\r\n    }\r\n  }\r\n}\r\n","<form [formGroup]=\"taskForm\" novalidate (ngSubmit)=\"onSubmit()\">\r\n  <mat-card class=\"shipping-card\">\r\n    <mat-card-content>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <mat-label>Название</mat-label>\r\n            <input matInput [formControl]=\"taskForm.controls.title\" />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <mat-label>Описание</mat-label>\r\n            <textarea\r\n              matInput\r\n              [formControl]=\"taskForm.controls.description\"\r\n            ></textarea>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <mat-label>Дедлайн</mat-label>\r\n            <input\r\n              matInput\r\n              [matDatepicker]=\"picker\"\r\n              [formControl]=\"taskForm.controls.deadline\"\r\n            />\r\n            <mat-datepicker-toggle\r\n              matIconSuffix\r\n              [for]=\"picker\"\r\n            ></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <mat-label>Приоритет</mat-label>\r\n            <mat-select [formControl]=\"taskForm.controls.priority\">\r\n              @for (state of priorities; track state) {\r\n              <mat-option [value]=\"state.value\">{{ state.name }}</mat-option>\r\n              }\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <mat-label>Статус</mat-label>\r\n            <mat-select [formControl]=\"taskForm.controls.status\">\r\n              @for (state of statuses; track state) {\r\n                <mat-option [value]=\"state.value\">{{ state.name }}</mat-option>\r\n              }\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <mat-label>Исполнитель</mat-label>\r\n            <input matInput [formControl]=\"taskForm.controls.performer\" />\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      @if (editMode || updateMode) {\r\n        <button\r\n          mat-stroked-button\r\n          color=\"primary\"\r\n          class=\"send-btn\"\r\n          type=\"submit\"\r\n          [disabled]=\"taskForm.invalid\"\r\n        >\r\n          Сохранить\r\n        </button>\r\n      } @else {\r\n        <button\r\n          mat-stroked-button\r\n          color=\"primary\"\r\n          class=\"send-btn\"\r\n          (click)=\"editTask()\"\r\n          [disabled]=\"taskForm.invalid\"\r\n        >\r\n          Редактировать\r\n        </button>\r\n      }\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</form>\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { MatSort, MatSortModule } from '@angular/material/sort';\r\nimport { MatSelectChange, MatSelectModule } from '@angular/material/select';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { TaskFilter, TaskItem, TaskTableFilter } from 'src/core/interfaces/task.interface';\r\nimport { TaskService } from 'src/core/services/task.service';\r\nimport { finalize, tap } from 'rxjs';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { GetDisplayColumnNamePipe } from 'src/core/pipes/get-display-column-name.pipe';\r\nimport { GetDisplayNamePipe } from 'src/core/pipes/get-display-name.pipe';\r\nimport { GetFilterDisplayNamePipe } from 'src/core/pipes/get-filter-display-name.pipe';\r\nimport { provideNativeDateAdapter } from '@angular/material/core';\r\nimport { MatDatepickerInputEvent, MatDatepickerModule } from '@angular/material/datepicker';\r\n\r\n@Component({\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatCardModule,\r\n    MatSortModule,\r\n    GetDisplayNamePipe,\r\n    GetDisplayColumnNamePipe,\r\n    GetFilterDisplayNamePipe,\r\n    MatProgressSpinnerModule,\r\n    MatDatepickerModule\r\n  ],\r\n  providers: [DatePipe, provideNativeDateAdapter(),\r\n  ],\r\n  selector: 'app-tasks-table',\r\n  templateUrl: './tasks-table.component.html',\r\n  styleUrl: './tasks-table.component.scss',\r\n})\r\nexport class TasksTableComponent implements OnInit, AfterViewInit {\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  \r\n  displayedColumns: string[] = [\r\n    'title',\r\n    'deadline',\r\n    'priority',\r\n    'status',\r\n    'performer',\r\n  ];\r\n\r\n  isLoading: boolean = true;\r\n  tableData: TaskItem[] = [];\r\n  taskTableFilters: TaskTableFilter[] = [];\r\n  dataSourceFilters: MatTableDataSource<TaskItem> = new MatTableDataSource(this.tableData);\r\n\r\n  private _status: string[] = [];\r\n  private _performer: string[] = [];\r\n  private _defaultValue: string = 'All';\r\n  private _filterDictionary: Map<string, string> = new Map<string, string>();\r\n  private _dataSource: MatTableDataSource<TaskItem> = new MatTableDataSource(this.tableData);\r\n  \r\n\r\n  constructor(private _taskService: TaskService) {}\r\n\r\n  ngOnInit(): void {\r\n    this._detTableData();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this._dataSource.sort = this.sort;\r\n  }\r\n\r\n\r\n  applyTasksFilter(ob: MatSelectChange | MatDatepickerInputEvent<Date>, tasksfilter?: TaskTableFilter) {\r\n    if (tasksfilter) {\r\n      this._filterDictionary.set(tasksfilter.name, ob.value);\r\n    } else {\r\n      this._filterDictionary.set('deadline', ob.value.toISOString());\r\n    }\r\n    this.dataSourceFilters.filter = JSON.stringify(\r\n      Array.from(this._filterDictionary.entries())\r\n    );\r\n  }\r\n\r\n  private _getUniqueValue(array: string[]): string[] {\r\n    return Array.from(new Set(array));\r\n  }\r\n\r\n  private _getFilterValue(array: TaskItem[], nameOfFilter: string): string[] {\r\n    return [\r\n      'All',\r\n      ...this._getUniqueValue(\r\n        array.map((taskItem) => taskItem[nameOfFilter as keyof TaskFilter])\r\n      ),\r\n    ];\r\n  }\r\n\r\n  private _setFiltersValue(): void {\r\n    this.taskTableFilters.push({\r\n      name: 'status',\r\n      options: this._status,\r\n      defaultValue: this._defaultValue,\r\n    });\r\n\r\n    this.taskTableFilters.push({\r\n      name: 'performer',\r\n      options: this._performer,\r\n      defaultValue: this._defaultValue,\r\n    });\r\n  }\r\n\r\n  private _setFilters(): void {\r\n    this._setFiltersValue();\r\n    this.dataSourceFilters.filterPredicate = function (record, filter) {\r\n      const map = new Map(JSON.parse(filter));\r\n      let isMatch = false;\r\n      for (let [key, value] of map) {\r\n        isMatch = value == 'All' || record[key as keyof TaskItem] == value;\r\n        if (!isMatch) return false;\r\n      }\r\n      return isMatch;\r\n    };\r\n  }\r\n\r\n  private _detTableData(): void {\r\n    this._taskService\r\n    .getTasks()\r\n    .pipe(\r\n      tap((res) => {\r\n        this._status = this._getFilterValue(res, 'status');\r\n        this._performer = this._getFilterValue(res, 'performer');\r\n      }),\r\n      finalize(() => (this.isLoading = false))\r\n    )\r\n    .subscribe((res) => {\r\n      this.tableData = res;\r\n      this._dataSource.data = res;\r\n      this.dataSourceFilters = this._dataSource;\r\n      this._setFilters();\r\n    });\r\n  }\r\n}\r\n","@for (filter of taskTableFilters; track filter) {\r\n  <mat-form-field appearance=\"fill\">\r\n    <mat-label>{{ filter.name | getDisplayColumnName }}</mat-label>\r\n    <mat-select\r\n      [(value)]=\"filter.defaultValue\"\r\n      (selectionChange)=\"applyTasksFilter($event, filter)\"\r\n    >\r\n      @for (op of filter.options; track $index) {\r\n        <mat-option [value]=\"op\">\r\n          {{ op | getFilterDisplayName : filter }}\r\n        </mat-option>\r\n      }\r\n    </mat-select>\r\n  </mat-form-field>\r\n}\r\n\r\n<mat-form-field>\r\n  <mat-label>Дедлайн</mat-label>\r\n  <input matInput [matDatepicker]=\"picker\" (dateChange)=\"applyTasksFilter($event)\">\r\n  <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n  <mat-datepicker #picker></mat-datepicker>\r\n</mat-form-field>\r\n\r\n\r\n<table\r\n  mat-table\r\n  [dataSource]=\"dataSourceFilters\"\r\n  class=\"mat-elevation-z8\"\r\n  matSort\r\n>\r\n  @for (column of displayedColumns; track column) {\r\n    <ng-container [matColumnDef]=\"column\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n        {{ column | getDisplayColumnName }}\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let task\">\r\n        {{ task[column] | getDisplayName : column }}\r\n      </td>\r\n    </ng-container>\r\n  }\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n  <tr\r\n    mat-row\r\n    *matRowDef=\"let task; columns: displayedColumns\"\r\n    [routerLink]=\"['/', 'task', task.id]\"\r\n  ></tr>\r\n</table>\r\n\r\n@if(!tableData.length&&!isLoading){\r\n  <p>Задач нет</p>\r\n} @if (isLoading) {\r\n  <div class=\"loader\"><mat-spinner></mat-spinner></div>\r\n}\r\n","import { RouterModule } from '@angular/router';\r\nimport { Component } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatListModule} from '@angular/material/list';\r\n\r\n@Component({\r\n  selector: 'app-main-layout',\r\n  standalone: true,\r\n  imports: [\r\n    RouterModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatCheckboxModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatListModule, \r\n    MatDividerModule\r\n  ],\r\n  templateUrl: './main-layout.component.html',\r\n  styleUrl: './main-layout.component.scss'\r\n})\r\nexport class MainLayoutComponent {\r\n  opened: boolean = true;\r\n}\r\n","<header>\r\n  <mat-toolbar>\r\n    <button mat-icon-button (click)=\"sidenav.toggle()\">\r\n      <mat-icon>menu</mat-icon>\r\n    </button>\r\n  </mat-toolbar>\r\n</header>\r\n<mat-sidenav-container class=\"main-layout__container\">\r\n  <mat-sidenav #sidenav mode=\"side\" [(opened)]=\"opened\">\r\n    <mat-list>\r\n      <mat-list-item>\r\n        <a\r\n          routerLinkActive=\"active-link\"\r\n          [routerLinkActiveOptions]=\"{ exact: true }\"\r\n          class=\"nav-link\"\r\n          [routerLink]=\"['/']\"\r\n        >\r\n          <p>Главная</p>\r\n        </a></mat-list-item\r\n      >\r\n      <mat-divider></mat-divider>\r\n      <mat-list-item>\r\n        <a\r\n          routerLinkActive=\"active-link\"\r\n          [routerLinkActiveOptions]=\"{ exact: true }\"\r\n          class=\"nav-link\"\r\n          [routerLink]=\"['/', 'tasks']\"\r\n        >\r\n          <p>Задачи</p>\r\n        </a></mat-list-item\r\n      >\r\n      <mat-divider></mat-divider>\r\n    </mat-list>\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content>\r\n    <router-outlet></router-outlet>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-main-page',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './main-page.component.html',\r\n  styleUrl: './main-page.component.scss'\r\n})\r\nexport class MainPageComponent {\r\n\r\n}\r\n","<main>\r\n  <H1>Тестовое задание</H1>\r\n  <p>Данный проект является результатом выполнения тестового задания</p>\r\n\r\n  <h2>Требования:</h2>\r\n  <p>\r\n    Необходимо создать мини-тасктреккер (по типу Asana, можно брать её в\r\n    пример).\r\n  </p>\r\n  <p>\r\n    Стек: Angular (желательно последней версии), Angular Material,\r\n    SCSS/SASS/LESS, TypeScript, RxJs, по желанию NgRx.\r\n  </p>\r\n  <p>В приложении должен быть реализован функционал:</p>\r\n  <ul>\r\n    <li>\r\n      создания задачи (заголовок, название, дедлайн, приоритет, статус,\r\n      исполнители);\r\n    </li>\r\n    <li>редактирование задач (статус, исполнители);</li>\r\n    <li>страница детального просмотра задач и переход на неё;</li>\r\n    <li>\r\n      отдельная страница со всеми задачами + фильтрация и сортировка задач по\r\n      статусам, исполнителю и дате дедлайна;\r\n    </li>\r\n    <li>сохранение всех изменений в localStorage;</li>\r\n  </ul>\r\n  <h2>Доп требования (необязательны, но желательны):</h2>\r\n  <ul>\r\n    <li>\r\n      максимально использовать TypeScript (везде должны быть указаны типы,\r\n      енамы, кастомные типы/интерфейсы, utility types и т.д.);\r\n    </li>\r\n    <li>использовать последнюю версию ангуляра и его новые фичи;</li>\r\n    <li>\r\n      реализовать имитацию получения данных с сервера с использование\r\n      angular-сервисов и NgRx (в качестве сервера можно использовать\r\n      localStorage);\r\n    </li>\r\n  </ul>\r\n</main>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { ActivatedRoute, RouterModule } from '@angular/router';\r\nimport { TaskFormComponent } from 'src/app/components/task-form/task-form.component';\r\nimport { TaskItem } from 'src/core/interfaces/task.interface';\r\nimport { TaskService } from 'src/core/services/task.service';\r\n\r\n@Component({\r\n  selector: 'app-task-detail-page',\r\n  standalone: true,\r\n  imports: [\r\n    RouterModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    TaskFormComponent,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  templateUrl: './task-detail-page.component.html',\r\n  styleUrl: './task-detail-page.component.scss',\r\n})\r\nexport class TaskDetailPageComponent implements OnInit {\r\n  id?: number;\r\n  data: TaskItem | null = null;\r\n\r\n  constructor(\r\n    private _activatedRoute: ActivatedRoute,\r\n    private _taskService: TaskService\r\n  ) {\r\n    this._activatedRoute.paramMap.subscribe((params) => {\r\n      this.id = Number(params.get('id'));\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.id) {\r\n      this._taskService.getTaskById(this.id).subscribe((taskData) => {\r\n        this.data = taskData || null;\r\n      });\r\n    }\r\n  }\r\n}\r\n","<main>\r\n  <div class=\"task-deatail__header\">\r\n    <button mat-icon-button [routerLink]=\"['/', 'tasks']\">\r\n      <mat-icon>arrow_left</mat-icon>\r\n    </button>\r\n    <h1 class=\"task-deatail__title\">\r\n      @if (id) { Задача №{{ id }}\r\n      } @else { Новая задача }\r\n    </h1>\r\n  </div>\r\n  @if (!id || data) {\r\n    <app-task-form [id]=\"id\" [taskData]=\"data\"></app-task-form>\r\n  } @else {\r\n    <div class=\"loader\"><mat-spinner></mat-spinner></div>\r\n  }\r\n</main>\r\n","import { Component } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TasksTableComponent } from 'src/app/components/tasks-table/tasks-table.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-tasks-page',\r\n  standalone: true,\r\n  imports: [RouterModule, MatIconModule, MatButtonModule, TasksTableComponent],\r\n  templateUrl: './tasks-page.component.html',\r\n  styleUrl: './tasks-page.component.scss'\r\n})\r\nexport class TasksPageComponent {\r\n\r\n}\r\n","<main>\r\n  <div class=\"task-page__header\">\r\n    <h1>Список задач</h1>\r\n    <button mat-raised-button [routerLink]=\"['/', 'task', 'new']\">\r\n      Добавить задачу\r\n    </button>\r\n  </div>\r\n  <div>\r\n    <app-tasks-table></app-tasks-table>\r\n  </div>\r\n</main>\r\n","export const BASE_URL = 'api/tasks/';\n","import { PriorityType } from '../interfaces/priority.interface';\r\nimport { StatusType } from '../interfaces/status.interface';\r\nimport { TaskFormItem, TaskItem } from '../interfaces/task.interface';\r\n\r\nexport const createTaskBodyDTO = (\r\n  body: TaskFormItem,\r\n  id?: number\r\n): TaskItem => ({\r\n  id: id ? id : 0,\r\n  title: body.title.value,\r\n  description: body.description.value,\r\n  deadline: body.deadline.value,\r\n  priority: body.priority.value ?? PriorityType.MIDDLE,\r\n  status: body.status.value ?? StatusType.CREATE,\r\n  performer: body.performer.value,\r\n});\r\n","export enum PriorityType {\n  HIGH = 'HIGH',\n  MIDDLE = 'MiDDLE',\n  LOW = 'LOW',\n}\n\nexport enum PriorityTypeName {\n  HIGH = 'Высокий',\n  MIDDLE = 'Средний',\n  LOW = 'Низкий',\n}\n\nexport const PRIORITY_TYPE_NAME = {\n  [PriorityType.HIGH]: PriorityTypeName.HIGH,\n  [PriorityType.MIDDLE]: PriorityTypeName.MIDDLE,\n  [PriorityType.LOW]: PriorityTypeName.LOW,\n};\n\nexport const PRIORITIES = [\n  { value: PriorityType.HIGH, name: PriorityTypeName.HIGH },\n  { value: PriorityType.MIDDLE, name: PriorityTypeName.MIDDLE },\n  { value: PriorityType.LOW, name: PriorityTypeName.LOW },\n];\n\nexport interface PriorityWithNames {\n  value: PriorityType;\n  name: PriorityTypeName;\n}\n","export enum StatusType {\n  CREATE = 'CREATE',\n  IN_PROGRESS = 'IN_PROGRESS',\n  COMPLETED = 'COMPLETED',\n}\n\nexport enum StatusTypeName {\n  CREATE = 'Создана',\n  IN_PROGRESS = 'В работе',\n  COMPLETED = 'Завершена',\n}\n\nexport const STATUS_TYPE_NAME = {\n  [StatusType.CREATE]: StatusTypeName.CREATE,\n  [StatusType.IN_PROGRESS]: StatusTypeName.IN_PROGRESS,\n  [StatusType.COMPLETED]: StatusTypeName.COMPLETED,\n};\n\nexport const STATUSES = [\n  { value: StatusType.CREATE, name: StatusTypeName.CREATE },\n  { value: StatusType.IN_PROGRESS, name: StatusTypeName.IN_PROGRESS },\n  { value: StatusType.COMPLETED, name: StatusTypeName.COMPLETED },\n];\n\nexport interface StatusesWithNames {\n  value: StatusType;\n  name: StatusTypeName;\n}\n","export enum DisplayedColumnsType {\n  TITLE = 'title',\n  DEADLINE = 'deadline',\n  PRIORITY = 'priority',\n  STATUS = 'status',\n  PERFORMER = 'performer',\n}\n\nexport enum DisplayedColumnsTypeName {\n  TITLE = 'Название',\n  DEADLINE = 'Дедлайн',\n  PRIORITY = 'Приоритет',\n  STATUS = 'Статус',\n  PERFORMER = 'Исполнитель',\n}\n\nexport const DISPLAY_COLUMS_TYPE_NAME = {\n  [DisplayedColumnsType.TITLE]: DisplayedColumnsTypeName.TITLE,\n  [DisplayedColumnsType.DEADLINE]: DisplayedColumnsTypeName.DEADLINE,\n  [DisplayedColumnsType.PRIORITY]: DisplayedColumnsTypeName.PRIORITY,\n  [DisplayedColumnsType.STATUS]: DisplayedColumnsTypeName.STATUS,\n  [DisplayedColumnsType.PERFORMER]: DisplayedColumnsTypeName.PERFORMER,\n};\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DISPLAY_COLUMS_TYPE_NAME, DisplayedColumnsType } from 'src/core/interfaces/table.interface';\r\n\r\n@Pipe({\r\n  name: 'getDisplayColumnName',\r\n  standalone: true\r\n})\r\nexport class GetDisplayColumnNamePipe implements PipeTransform {\r\n  \r\n  transform(value: string): string {\r\n    return DISPLAY_COLUMS_TYPE_NAME[value as DisplayedColumnsType];\r\n  }\r\n\r\n}\r\n","import { DatePipe } from '@angular/common';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport {\r\n  PRIORITY_TYPE_NAME,\r\n  PriorityType,\r\n} from 'src/core/interfaces/priority.interface';\r\nimport {\r\n  STATUS_TYPE_NAME,\r\n  StatusType,\r\n} from 'src/core/interfaces/status.interface';\r\nimport { DisplayedColumnsType } from 'src/core/interfaces/table.interface';\r\n\r\n\r\n@Pipe({\r\n  name: 'getDisplayName',\r\n  standalone: true,\r\n})\r\nexport class GetDisplayNamePipe implements PipeTransform {\r\n  constructor(private date: DatePipe) {}\r\n\r\n  transform(value: string, columnName: string): string | null {\r\n    switch (columnName) {\r\n      case DisplayedColumnsType.DEADLINE:\r\n        return this.date.transform(value, 'HH:mm dd.MM.yyyy');\r\n      case DisplayedColumnsType.PRIORITY:\r\n        return PRIORITY_TYPE_NAME[value as PriorityType];\r\n      case DisplayedColumnsType.STATUS:\r\n        return STATUS_TYPE_NAME[value as StatusType];\r\n      default:\r\n        return value;\r\n    }\r\n  }\r\n}\r\n","import { DatePipe } from '@angular/common';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport { STATUS_TYPE_NAME, StatusType } from 'src/core/interfaces/status.interface';\r\nimport { DisplayedColumnsType } from 'src/core/interfaces/table.interface';\r\nimport { TaskTableFilter } from 'src/core/interfaces/task.interface';\r\n\r\n@Pipe({\r\n  name: 'getFilterDisplayName',\r\n  standalone: true\r\n})\r\nexport class GetFilterDisplayNamePipe implements PipeTransform {\r\n  constructor(private date: DatePipe) {}\r\n\r\n  transform(value: string, ...args: TaskTableFilter[]): string | null {\r\n    if (value === 'All') {\r\n      return 'Любой'\r\n    }\r\n    switch (args[0].name) {\r\n      case DisplayedColumnsType.STATUS:\r\n        return STATUS_TYPE_NAME[value as StatusType];\r\n      case DisplayedColumnsType.DEADLINE:\r\n        return this.date.transform(value, 'HH:mm dd.MM.yyyy');\r\n      default:\r\n        return value;\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  InMemoryDbService,\r\n  RequestInfo,\r\n  ResponseOptions,\r\n} from 'angular-in-memory-web-api';\r\nimport { Observable } from 'rxjs';\r\nimport { TaskItem } from '../interfaces/task.interface';\r\n\r\n@Injectable()\r\nexport class InMemoryStorageService implements InMemoryDbService {\r\n  createDb() {\r\n    const data = {\r\n      tasks: [],\r\n    };\r\n    return data;\r\n  }\r\n\r\n  genId(tasks: TaskItem[]): number {\r\n    return tasks.length > 0 ? Math.max(...tasks.map((task) => task.id)) + 1 : 1;\r\n  }\r\n\r\n  get(reqInfo: RequestInfo): Observable<Response> {\r\n    if (reqInfo.collectionName === 'tasks') {\r\n      if (!!reqInfo.id) {\r\n        const tasks = localStorage.getItem('tasks');\r\n        if (tasks) {\r\n          const items: TaskItem[] = JSON.parse(tasks);\r\n          const task = items.find((item) => item.id === +reqInfo.id);\r\n          if (task) {\r\n            return reqInfo.utils.createResponse$(() => {\r\n              return {\r\n                body: task,\r\n                status: 200,\r\n              };\r\n            });\r\n          } else {\r\n            return reqInfo.utils.createResponse$(() => {\r\n              return {\r\n                status: 404,\r\n                body: `Task with id ${reqInfo.id} not found`,\r\n              };\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n        const tasks = localStorage.getItem('tasks');\r\n        if (tasks) {\r\n          const items = JSON.parse(tasks);\r\n          return reqInfo.utils.createResponse$(() => {\r\n            return {\r\n              body: items,\r\n              status: 200,\r\n            };\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return reqInfo.utils.createResponse$(() => {\r\n      return {\r\n        status: 400,\r\n        body: 'Bad request',\r\n      };\r\n    });\r\n  }\r\n\r\n  post(reqInfo: RequestInfo): Observable<Response> {\r\n    if (reqInfo.collectionName === 'tasks') {\r\n      const body = reqInfo.utils.getJsonBody(reqInfo.req);\r\n      let tasks = localStorage.getItem('tasks');\r\n      let items = tasks ? JSON.parse(tasks) : [];\r\n      items.push({ ...body, id: this.genId(items) });\r\n      localStorage.setItem('tasks', JSON.stringify(items));\r\n      return reqInfo.utils.createResponse$(() => {\r\n        return {\r\n          body,\r\n          status: 200,\r\n        };\r\n      });\r\n    }\r\n    return reqInfo.utils.createResponse$(() => {\r\n      return {\r\n        status: 400,\r\n        body: 'Bad request',\r\n      };\r\n    });\r\n  }\r\n\r\n  patch(reqInfo: RequestInfo): Observable<Response> {\r\n    if (reqInfo.collectionName === 'tasks') {\r\n      const item = reqInfo.utils.getJsonBody(reqInfo.req);\r\n      let tasks = localStorage.getItem('tasks');\r\n      let items = tasks ? JSON.parse(tasks) : [];\r\n      const index = items.findIndex(\r\n        (existingItem: TaskItem) => existingItem.id === item.id\r\n      );\r\n      if (index >= 0) {\r\n        Object.assign(items[index], item);\r\n        localStorage.setItem('tasks', JSON.stringify(items));\r\n        return reqInfo.utils.createResponse$(() => {\r\n          return {\r\n            updatedItem: items[index],\r\n            status: 200,\r\n          };\r\n        });\r\n      }\r\n    }\r\n    return reqInfo.utils.createResponse$(() => {\r\n      return {\r\n        status: 400,\r\n        body: 'Bad request',\r\n      };\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BASE_URL } from '../api.const';\nimport { TaskItem } from '../interfaces/task.interface';\nimport { BehaviorSubject, filter, Observable, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaskService {\n  private _tasks$ = new BehaviorSubject<TaskItem[]>([]);\n\n  get tasks$() {\n    return this._tasks$.asObservable().pipe(filter((res) => !!res));\n  }\n\n  constructor(private http: HttpClient) {}\n\n  getTasks(): Observable<TaskItem[]> {\n    return this.http\n      .get<TaskItem[]>(BASE_URL)\n      .pipe(tap((res) => this._tasks$.next(res)));\n  }\n\n  getTaskById(id: number): Observable<TaskItem> {\n    return this.http.get<TaskItem>(BASE_URL + id);\n  }\n\n  createTask(task: TaskItem) {\n    return this.http.post<TaskItem[]>(BASE_URL, task);\n  }\n\n  updateTask(task: Partial<TaskItem>) {\n    return this.http.patch<TaskItem[]>(BASE_URL, task);\n  }\n}\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","MainLayoutComponent","TasksPageComponent","MainPageComponent","TaskDetailPageComponent","routes","path","component","children","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports","AppComponent","constructor","title","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ɵɵelement","BrowserModule","provideAnimationsAsync","HttpClientModule","HttpClientInMemoryWebApiModule","InMemoryStorageService","MatTableModule","MatPaginatorModule","MatSortModule","MAT_DATE_LOCALE","AppModule","bootstrap","provide","useValue","declarations","ReactiveFormsModule","Validators","MatInputModule","MatButtonModule","MatSelectModule","MatRadioModule","MatCardModule","MAT_FORM_FIELD_DEFAULT_OPTIONS","MatDatepickerModule","provideNativeDateAdapter","PRIORITIES","STATUSES","createTaskBodyDTO","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","state_r2","value","ɵɵadvance","ɵɵtextInterpolate","name","state_r3","ctx_r3","taskForm","invalid","ɵɵlistener","TaskFormComponent_Conditional_46_Template_button_click_0_listener","ɵɵrestoreView","_r5","ɵɵnextContext","ɵɵresetView","editTask","TaskFormComponent","_fb","_taskService","_router","taskData","updateMode","editMode","group","control","required","description","deadline","Date","setHours","priority","status","performer","statuses","priorities","ngOnInit","id","disable","patchValue","controls","enable","onSubmit","_getFormAction","updateTask","subscribe","next","reset","navigate","error","err","console","createTask","ɵɵdirectiveInject","NonNullableFormBuilder","i2","TaskService","i3","Router","inputs","standalone","features","ɵɵProvidersFeature","floatLabel","ɵɵStandaloneFeature","consts","TaskFormComponent_Template","TaskFormComponent_Template_form_ngSubmit_0_listener","_r1","ɵɵrepeaterCreate","TaskFormComponent_For_30_Template","ɵɵrepeaterTrackByIdentity","TaskFormComponent_For_38_Template","ɵɵtemplate","TaskFormComponent_Conditional_45_Template","TaskFormComponent_Conditional_46_Template","picker_r6","ɵɵrepeater","ɵɵconditional","i4","MatInput","i5","MatFormField","MatLabel","MatSuffix","i6","MatButton","i7","MatSelect","i8","MatOption","i9","MatCard","MatCardActions","MatCardContent","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormControlDirective","FormGroupDirective","i10","MatDatepicker","MatDatepickerInput","MatDatepickerToggle","styles","MatTableDataSource","MatSort","MatProgressSpinnerModule","finalize","tap","CommonModule","DatePipe","GetDisplayColumnNamePipe","GetDisplayNamePipe","GetFilterDisplayNamePipe","op_r5","ɵɵtextInterpolate1","ɵɵpipeBind2","filter_r3","ɵɵtwoWayListener","TasksTableComponent_For_1_Template_mat_select_valueChange_4_listener","$event","_r2","$implicit","ɵɵtwoWayBindingSet","defaultValue","TasksTableComponent_For_1_Template_mat_select_selectionChange_4_listener","applyTasksFilter","TasksTableComponent_For_1_For_6_Template","ɵɵrepeaterTrackByIndex","ɵɵpipeBind1","ɵɵtwoWayProperty","options","column_r6","task_r7","ɵɵelementContainerStart","TasksTableComponent_For_11_th_1_Template","TasksTableComponent_For_11_td_2_Template","ɵɵpureFunction1","_c0","task_r8","TasksTableComponent","displayedColumns","isLoading","tableData","taskTableFilters","dataSourceFilters","_status","_performer","_defaultValue","_filterDictionary","Map","_dataSource","_detTableData","ngAfterViewInit","sort","ob","tasksfilter","set","toISOString","filter","JSON","stringify","Array","from","entries","_getUniqueValue","array","Set","_getFilterValue","nameOfFilter","map","taskItem","_setFiltersValue","push","_setFilters","filterPredicate","record","parse","isMatch","key","getTasks","pipe","res","data","viewQuery","TasksTableComponent_Query","TasksTableComponent_Template","TasksTableComponent_For_1_Template","TasksTableComponent_Template_input_dateChange_5_listener","TasksTableComponent_For_11_Template","TasksTableComponent_tr_12_Template","TasksTableComponent_tr_13_Template","TasksTableComponent_Conditional_14_Template","TasksTableComponent_Conditional_15_Template","picker_r9","length","RouterLink","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","MatSortHeader","MatProgressSpinner","FormsModule","MatCheckboxModule","MatIconModule","MatMenuModule","MatSidenavModule","MatToolbarModule","MatDividerModule","MatListModule","opened","MainLayoutComponent_Template","MainLayoutComponent_Template_button_click_2_listener","sidenav_r2","ɵɵreference","toggle","MainLayoutComponent_Template_mat_sidenav_openedChange_6_listener","ɵɵpureFunction0","_c1","_c2","RouterOutlet","RouterLinkActive","MatToolbar","MatSidenav","MatSidenavContainer","MatSidenavContent","MatIconButton","MatIcon","MatList","MatListItem","MatDivider","MainPageComponent_Template","ctx_r0","_activatedRoute","paramMap","params","Number","get","getTaskById","ActivatedRoute","TaskDetailPageComponent_Template","TaskDetailPageComponent_Conditional_6_Template","TaskDetailPageComponent_Conditional_7_Template","TaskDetailPageComponent_Conditional_8_Template","TaskDetailPageComponent_Conditional_9_Template","TasksPageComponent_Template","BASE_URL","PriorityType","StatusType","body","MIDDLE","CREATE","PriorityTypeName","PRIORITY_TYPE_NAME","HIGH","LOW","StatusTypeName","STATUS_TYPE_NAME","IN_PROGRESS","COMPLETED","DisplayedColumnsType","DisplayedColumnsTypeName","DISPLAY_COLUMS_TYPE_NAME","TITLE","DEADLINE","PRIORITY","STATUS","PERFORMER","transform","pure","date","columnName","args","createDb","tasks","genId","Math","max","task","reqInfo","collectionName","localStorage","getItem","items","find","item","utils","createResponse$","post","getJsonBody","req","setItem","patch","index","findIndex","existingItem","Object","assign","updatedItem","factory","ɵfac","BehaviorSubject","tasks$","_tasks$","asObservable","http","ɵɵinject","HttpClient","providedIn","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}